PREFIXES:
		PREFIX isro: <http://www.arbi.com//BuiltInPlan#>;


PLAN CONCLUDE PostObjectGrabbed($object, $location) {
	ID: "http://www.arbi.com//BuiltInPlan#PostObjectGrabbed"
	PRECONDITION:
	BODY:
		POST PERFORM ObjectGrabbed($object, $location);
		RETRACT PostObjectGrabbed($object, $location);
	
	UTILITY : 10000;
}

PLAN PERFORM ObjectGrabbed($object, $location){
	ID: "http://www.arbi.com//BuiltInPlan#ObjectGrabbedAtPalletizingStation1"
	PRECONDITION:
		FACT Communication($communicationInstance);
		FACT isro:BehaviorAddress($address);
		FACT GLUtility($glUtility);
		FACT robotAt($robot, $vertex1, $vertex2);
		FACT isro:ReasonerAddress($reasoner);
		FACT ExtraUtility($util);
		$location == "http://www.arbi.com/ontologies/arbi.owl#station1";
	BODY:
		PERFORM  isro:startLog("PERFORM", "ObjectGrabbed at station1");
		PERFORM  isro:UpdateAgentTaskStatus("ObjectGrabbed", "start");
		
		$stationType = "PalletizingStation";
		PERFORM isro:EnterToStationForGrab($location, $stationType);
		
		PERFORM isro:QueryStationVertex($location, $stationVertex);
		PERFORM isro:RequestLoad($stationVertex);
		$stationType = "PalletizingStation";
		PERFORM isro:ExitFromStationForGrab($location, $stationType);
				
		PERFORM  isro:UpdateAgentTaskStatus("ObjectGrabbed", "complete");
		PERFORM isro:endLog("PERFORM", "ObjectGrabbed");
		
		$communicationInstance.inform($reasoner, "(goalComplete (ObjectGrabbed \"" + $object +"\" \"" + $location + "\"))");
	UTILITY: 20; 

}

PLAN PERFORM ObjectGrabbed($object, $location){
	ID: "http://www.arbi.com//BuiltInPlan#ObjectGrabbedAtPalletizingStation2"
	PRECONDITION:
		FACT Communication($communicationInstance);
		FACT isro:BehaviorAddress($address);
		FACT GLUtility($glUtility);
		FACT robotAt($robot, $vertex1, $vertex2);
		FACT isro:ReasonerAddress($reasoner);
		FACT ExtraUtility($util);
		$location == "http://www.arbi.com/ontologies/arbi.owl#station2";
	BODY:
		PERFORM  isro:startLog("PERFORM", "ObjectGrabbed at station2");
		PERFORM  isro:UpdateAgentTaskStatus("ObjectGrabbed", "start");
		
		$stationType = "PalletizingStation";
		PERFORM isro:EnterToStationForGrab($location, $stationType);
		
		PERFORM isro:QueryStationVertex($location, $stationVertex);
		PERFORM isro:RequestLoad($stationVertex);
		
		PERFORM isro:ExitFromStation($location, $stationType);
				
		PERFORM  isro:UpdateAgentTaskStatus("ObjectGrabbed", "complete");
		PERFORM isro:endLog("PERFORM", "ObjectGrabbed");
		
		$communicationInstance.inform($reasoner, "(goalComplete (ObjectGrabbed \"" + $object +"\" \"" + $location + "\"))");
	UTILITY: 20; 

}

PLAN PERFORM ObjectGrabbed($object, $location){
	ID: "http://www.arbi.com//BuiltInPlan#ObjectGrabbedForKyonggiDemo"
	PRECONDITION:
		FACT Communication($communicationInstance);
		FACT isro:BehaviorAddress($address);
		FACT GLUtility($glUtility);
		FACT robotAt($robot, $vertex1, $vertex2);
		FACT isro:ReasonerAddress($reasoner);
		FACT ExtraUtility($util);
	BODY:
		PERFORM  isro:startLog("PERFORM", "ObjectGrabbed");
		PERFORM  isro:UpdateAgentTaskStatus("ObjectGrabbed", "start");
		System.out.println("location is " + $location);
		$stationType = "NormalStation";
		
		PERFORM isro:EnterToStationForGrab($location, $stationType);
		
		PERFORM isro:QueryStationVertex($location, $stationVertex);
		PERFORM isro:RequestLoad($stationVertex);
		
		PERFORM isro:ExitFromStation($location, $stationType);
				
		PERFORM  isro:UpdateAgentTaskStatus("ObjectGrabbed", "complete");
		PERFORM isro:endLog("PERFORM", "ObjectGrabbed");
		
		$communicationInstance.inform($reasoner, "(goalComplete (ObjectGrabbed \"" + $object +"\" \"" + $location + "\"))");
	UTILITY: 10; 

}
/*

PLAN PERFORM ObjectGrabbed($object, $location){
	ID: "http://www.arbi.com//BuiltInPlan#ObjectGrabbed"
	PRECONDITION:
		FACT Communication($communicationInstance);
		FACT isro:BehaviorAddress($address);
		FACT GLUtility($glUtility);
		FACT RobotAt($robot, $vertex1, $vertex2);
		FACT isro:ReasonerAddress($reasoner);
		FACT ExtraUtility($util);
	BODY:
		PERFORM  isro:startLog("PERFORM", "ObjectGrabbed");
		PERFORM  isro:UpdateAgentTaskStatus("ObjectGrabbed", "start");
		
		PERFORM isro:EnterToStation($location);
		
		PERFORM isro:QueryStationVertex($location, $stationVertex);
				
		PERFORM isro:RequestLoad($stationVertex);
		
		PERFORM isro:ExitFromStation($location);
				
		PERFORM  isro:UpdateAgentTaskStatus("ObjectGrabbed", "complete");
		PERFORM isro:endLog("PERFORM", "ObjectGrabbed");
		
		$communicationInstance.inform($reasoner, "(goalComplete (ObjectGrabbed \"" + $object +"\" \"" + $location + "\"))");
	UTILITY: 10; 

}
*/